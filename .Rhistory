info?
?:
info()
skip()
skip()
nxt()
submit()
submit()
submit()
skip()
skip()
sum()
submit()
submit()
info()
skip()
submit()
info()
main()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num  = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(std_dev, c(1.4,3.6,7.9,8.8))
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(sum, c(1.4,3.6,7.9,8.8))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
exit()
info()
bye()
swirl()
evaluate(x,c(8,4,0))
evaluate(x)
info()
skip()
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x)length(x), c(8,4,0))
evaluate(function(x){length(x)}, c(8,4,0))
evaluate(function(x){length(x)}, c(8,4,0))
skip()
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Good", "morning")
submit
submit()
submit()
mad_libs("cooper square", "cutie", "dog")
submit(
)
"I" %p% "love" %p% "R!"
head(flags)
dim(flags)
class(flags)?
s
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
xyplot(y~x | f*g,data)
library(lattice)
install.packages(lattice)
install.packages("lattice")
install.packages("lattice")
install.packages("grid")
library(lattice)
library(datasets)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, main = "title")
xyplot(Ozone~Wind, data = airquality, main = "title", legend = "blue")
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5,1))
swirl()
library(swirl)
swirl()
lapply(flag_colors, sum())
lapply(flag_colors, sum
)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
library(swirl)
swirl()
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flag_shapes, unique)
unique_vals <- lapply(flag, unique)
unique_vals <- lapply(flags, unique)
unique_vals
unique_vals(flags, length)
apply(unique_vals), length)
unique_vals(flags, length)
unique_vals(length)
unique_vals(length)
info()
skip()
sapply(flags,unique)
lapply(unique_vals,function(elem), elem[2])
lapply(unique_vals,function(elem) elem[2])
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(palnts)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10, replace =FALSE)
sample(1:20,10, replace =TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <- sample(0:1,c(0,1), prob = (c(0.3,0.7)))
flips <- sample(c(0,1),100, replace = TRUE, prob = (c(0.3,0.7)))
flips <- sample(c(0,1),100, replace = TRUE, prob = c(0.3,0.7))
flips
sum()
sum(flips)
?rbinom
rbinom(1,size=100,prob=.7)
flips2 <- rbinom(1,size=100, prob=.7)
flips2 <- rbinom(100,size=1, prob=.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(sd=25, mean = 100)
rnorm(10, sd=25, mean = 100)
rpois(5,mean=10)
rnorm(rpois, 5,mean=1-)
rnorm(rpois, 5,mean=10)
?rpois
rpois(5)
rpois(5,mean=10)
skip()
my_pois <- replicate(100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=car$speed, y=cars$dist)
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=Speed, y=cars$dist)
plot(x=cars$speed, y=cars$dist)
plot(x=cars$speed, y=cars$dist, xlab = "Speed")
plot(x=cars$speed, y=cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist,ylab = "Stopping Distance")
plot(x=cars$speed, y=cars$dist,ylab = "Stopping Distance", xlab= "Speed")
plot(x=cars$speed, y=cars$dist,ylab = "Stopping Distance", xlab= "Speed", main = "My Plot")
plot(car, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub= "My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
mtcars
data(mtcars)
?boxplot
boxplot(mpg~cyl)
boxplot(mpg~cyl,mtcars)
hist(mtcars$mpg)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays()
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- striptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = "days")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
swirl()
swirl()
My first R Markdown file
=================================
THis is my first r markdown file.
here, we are going to load some data
'''{r}
library(datasets)
data(airquality)
summary(airquality)
'''
Let's makea pairs plot of the data.
'''{r}
pairs(airquality)
'''
My first R Markdown file
=================================
THis is my first r markdown file.
here, we are going to load some data
'''{r}
library(datasets)
data(airquality)
summary(airquality)
'''
'''{r}
pairs(airquality)
'''
'''{r}
library(datasets)
data(airquality)
summary(airquality)
'''
'''{r}
pairs(airquality)
'''
'''{r}
library(datasets)
data(airquality)
summary(airquality)
'''
'''{r}
pairs(airquality)
'''
]
[]
''
library(datasets)
data(airquality)
summary(airquality)
install.packages("rmarkdown"")
()
[]
[]
{}
k
hyi
ftjf
install.packages(rmarkdown)
install.packages("rmarkdown")
My first R Markdown file
=================================
THis is my first r markdown file.
here, we are going to load some data
'''{r}
library(datasets)
data(airquality)
summary(airquality)
'''
'''{r}
pairs(airquality)
'''
My first R Markdown file
=================================
THis is my first r markdown file.
here, we are going to load some data
```{r}
library(datasets)
data(airquality)
summary(airquality)
```
```{r}
pairs(airquality)
```
My first R Markdown file
=================================
THis is my first r markdown file.
here, we are going to load some data
```{r}
library(datasets)
data(airquality)
summary(airquality)
```
```{r}
pairs(airquality)
```
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
swirl()
library(swirl)
swirl()
summmary(pollution)
summary("pollution")
head(pollution)
if(!exists("NEI")){
NEI <- readRDS("./data/summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("./data/Source_Classification_Code.rds")
}
# Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
# Using the base plotting system, make a plot showing the total PM2.5 emission from all sources
# for each of the years 1999, 2002, 2005, and 2008.
aggregatedTotalByYear <- aggregate(Emissions ~ year, NEI, sum)
png('plot1.png')
barplot(height=aggregatedTotalByYear$Emissions, names.arg=aggregatedTotalByYear$year, xlab="years", ylab=expression('total PM'[2.5]*' emission'),main=expression('Total PM'[2.5]*' emissions at various years'))
dev.off()
if(!exists("NEI")){
NEI <- readRDS("./data/summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("./data/Source_Classification_Code.rds")
}
# Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
# Using the base plotting system, make a plot showing the total PM2.5 emission from all sources
# for each of the years 1999, 2002, 2005, and 2008.
aggregatedTotalByYear <- aggregate(Emissions ~ year, NEI, sum)
png('plot1.png')
barplot(height=aggregatedTotalByYear$Emissions, names.arg=aggregatedTotalByYear$year, xlab="years", ylab=expression('total PM'[2.5]*' emission'),main=expression('Total PM'[2.5]*' emissions at various years'))
dev.off()
if(!exists("NEI")){
NEI <- readRDS("./data/summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("./data/Source_Classification_Code.rds")
}
# Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
# Using the base plotting system, make a plot showing the total PM2.5 emission from all sources
# for each of the years 1999, 2002, 2005, and 2008.
aggregatedTotalByYear <- aggregate(Emissions ~ year, NEI, sum)
png('plot1.png')
barplot(height=aggregatedTotalByYear$Emissions, names.arg=aggregatedTotalByYear$year, xlab="years", ylab=expression('total PM'[2.5]*' emission'),main=expression('Total PM'[2.5]*' emissions at various years'))
dev.off()
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# Have total emissions from PM2.5 decreased in the Baltimore City, Maryland (fips == "24510") from 1999 to 2008?
# Use the base plotting system to make a plot answering this question.
subsetNEI  <- NEI[NEI$fips =="24510", ]
aggregatedTotalByYear <- aggregate(Emissions ~ year, subsetNEI, sum)
png('plot2.png')
barplot(height=aggregatedTotalByYear$Emissions, names.arg=aggregatedTotalByYear$year, xlab="years", ylab=expression('total PM'[2.5]*' emission'),main=expression('Total PM'[2.5]*' in the Baltimore City, MD emissions at various years'))
dev.off()
getwd()
setwd("/Users/liempham/Desktop/Ashley/courseproject2")
getwd()
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# Have total emissions from PM2.5 decreased in the Baltimore City, Maryland (fips == "24510") from 1999 to 2008?
# Use the base plotting system to make a plot answering this question.
subsetNEI  <- NEI[NEI$fips =="24510", ]
aggregatedTotalByYear <- aggregate(Emissions ~ year, subsetNEI, sum)
png('plot2.png')
barplot(height=aggregatedTotalByYear$Emissions, names.arg=aggregatedTotalByYear$year, xlab="years", ylab=expression('total PM'[2.5]*' emission'),main=expression('Total PM'[2.5]*' in the Baltimore City, MD emissions at various years'))
dev.off()
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
library(ggplot2)
# Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable,
# which of these four sources have seen decreases in emissions from 1999 2008 for Baltimore City?
# Which have seen increases in emissions from 1999-2008?
# Use the ggplot2 plotting system to make a plot answer this question.
# 24510 equals Baltimore City
subsetNEI  <- NEI[NEI$fips=="24510", ]
aggregatedTotalByYearAndType <- aggregate(Emissions ~ year + type, subsetNEI, sum)
png("plot3.png", width=640, height=480)
g <- ggplot(aggregatedTotalByYearAndType, aes(year, Emissions, color = type))
g <- g + geom_line() +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions in Baltimore City, Maryland (fips == "24510") from 1999 to 2008')
print(g)
dev.off()
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# merging the two datasets
if(!exists("NEISCC")){
NEISCC <- merge(NEI, SCC, by="SCC")
}
library(ggplot2)
# Across the United States, how have emissions from coal combustion-related sources changed from 1999-2008?
# fetch all NEIxSCC records with Short.Name (SCC) Coal
coalMatches  <- grepl("coal", NEISCC$Short.Name, ignore.case=TRUE)
subsetNEISCC <- NEISCC[coalMatches, ]
aggregatedTotalByYear <- aggregate(Emissions ~ year, subsetNEISCC, sum)
png("plot4.png", width=640, height=480)
g <- ggplot(aggregatedTotalByYear, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions from coal sources from 1999 to 2008')
print(g)
dev.off()
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# merging the two datasets
if(!exists("NEISCC")){
NEISCC <- merge(NEI, SCC, by="SCC")
}
library(ggplot2)
# How have emissions from motor vehicle sources changed from 1999-2008 in Baltimore City?
subsetNEI <- NEI[NEI$fips=="24510" & NEI$type=="ON-ROAD",  ]
aggregatedTotalByYear <- aggregate(Emissions ~ year, subsetNEI, sum)
png("plot5.png", width=840, height=480)
g <- ggplot(aggregatedTotalByYear, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions from motor vehicle (type = ON-ROAD) in Baltimore City, Maryland (fips = "24510") from 1999 to 2008')
print(g)
dev.off()
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# merging the two datasets
if(!exists("NEISCC")){
NEISCC <- merge(NEI, SCC, by="SCC")
}
library(ggplot2)
# How have emissions from motor vehicle sources changed from 1999-2008 in Baltimore City?
subsetNEI <- NEI[NEI$fips=="24510" & NEI$type=="ON-ROAD",  ]
aggregatedTotalByYear <- aggregate(Emissions ~ year, subsetNEI, sum)
png("plot5.png", width=840, height=480)
g <- ggplot(aggregatedTotalByYear, aes(factor(year), Emissions))
g <- g + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions from motor vehicle (type = ON-ROAD) in Baltimore City, Maryland (fips = "24510") from 1999 to 2008')
print(g)
dev.off()
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# merging the two datasets
if(!exists("NEISCC")){
NEISCC <- merge(NEI, SCC, by="SCC")
}
library(ggplot2)
# Compare emissions from motor vehicle sources in Baltimore City
# with emissions from motor vehicle sources in Los Angeles County,
# California (fips == "06037"). Which city has seen greater changes over
# time in motor vehicle emissions?
subsetNEI <- NEI[(NEI$fips=="24510"|NEI$fips=="06037") & NEI$type=="ON-ROAD",  ]
aggregatedTotalByYearAndFips <- aggregate(Emissions ~ year + fips, subsetNEI, sum)
aggregatedTotalByYearAndFips$fips[aggregatedTotalByYearAndFips$fips=="24510"] <- "Baltimore, MD"
aggregatedTotalByYearAndFips$fips[aggregatedTotalByYearAndFips$fips=="06037"] <- "Los Angeles, CA"
png("plot6.png", width=1040, height=480)
g <- ggplot(aggregatedTotalByYearAndFips, aes(factor(year), Emissions))
g <- g + facet_grid(. ~ fips)
g <- g + geom_bar(stat="identity")  +
xlab("year") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle('Total Emissions from motor vehicle (type=ON-ROAD) in Baltimore City, MD (fips = "24510") vs Los Angeles, CA (fips = "06037")  1999-2008')
print(g)
dev.off()
